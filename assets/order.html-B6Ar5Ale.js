import{_ as a,c as t,a as i,d as n,o as l,r as c}from"./app-DZLWD7CX.js";const d={};function o(r,e){const s=c("Mermaid");return l(),t("div",null,[e[0]||(e[0]=i(`<h2 id="仪表盘启动流程" tabindex="-1"><a class="header-anchor" href="#仪表盘启动流程"><span>仪表盘启动流程</span></a></h2><p>这个流程中的各种 <code>管理器</code> , <code>服务</code> , 源代码均在 <code>KitX Dashboard/Services/</code> 下</p><ol><li>初始化事件总线 (<code>EventHandlers</code>)</li><li>处理启动参数 (即命令行参数)</li><li>单进程检查 (防止多个实例同时运行)</li><li>启动时检查 <ol><li>读取配置文件, 初始化配置信息 (存在则读取, 不存在则初始化默认配置)</li><li>初始化日志系统, 开始记录日志</li><li>初始化全局异常捕获</li><li>初始化相关环境 (存在则读取, 不存在则重新创建) <ol><li>Common.Algorithm</li></ol></li><li>初始化数据库 (存在则读取, 不存在则重新创建)</li><li>初始化任务管理器 (<code>TasksManager</code>)</li><li>初始化网络管理器 (<code>WebManager</code>)</li><li>初始化数据记录管理器 (<code>StatisticsManager</code>)</li><li>初始化有关事件 (<code>EventHandlers</code>)</li><li>初始化文件监控管理器 (<code>FileWatcherManager</code>)</li></ol></li><li>进入应用生命周期, 启动图形化界面</li></ol><h2 id="网络初始化过程" tabindex="-1"><a class="header-anchor" href="#网络初始化过程"><span>网络初始化过程</span></a></h2><ul><li>在 <code>仪表盘启动流程</code> 的 4.7 步中, 实际执行的代码是:<div class="language-csharp line-numbers-mode" data-ext="csharp" data-title="csharp"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  #</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">region</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 初始化 WebManager</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  Program</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">TasksManager</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">SignalRun</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">nameof</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">SignalsNames</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">MainWindowInitSignal</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">),</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> ()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">      new</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> Thread</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">          Thread</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Sleep</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Program</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Config</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Web</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">DelayStartSeconds</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1000</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">          Program</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">WebManager</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> WebManager</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">().</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      }).</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  #</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">endregion</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>这个任务将在 <code>MainWindow.xaml.cs</code> 中 <code>InitWindow()</code> 函数执行完毕时 <code>Raise</code> 并且休眠 <code>Program.Config.Web.DelayStartSeconds</code> 秒数后再开始启动网络相关服务</li><li><code>WebManager.Start()</code> 方法将分别初始化 <code>DevicesManager</code> , <code>DevicesServer</code> , <code>PluginsManager</code> 和 <code>PluginsServer</code></li><li><code>DevicesServer</code> 在调用 <code>Start()</code> 方法后开始向局域网多播本机的设备信息 udp 包, 表现形式为 <code>DeviceInfoStruct</code> 的 json 序列化字符串 (该结构定义于 <code>KitX.Web.Rules</code> 中) 同时也会监听来自局域网组播的 udp 包, 并将其解析为 <code>DeviceInfoStruct</code> 结构, 并通过 <code>DevicesManager.Update(DeviceInfoStruct)</code> 方法将其添加到界面中</li><li><code>PluginsServer</code> 在调用 <code>Start()</code> 方法后开始监听网络连接请求并同请求的插件建立 tcp 连接, 接收到以 <code>&quot;PluginStruct: &quot;</code> 打头的报文之后将剩余部分作为 json 字符串反序列化为 <code>PluginStruct</code> 结构, 并通过 <code>PluginsManager.Execute(string, IPEndPoint)</code> 方法将其添加到界面中</li></ul><h2 id="自组网流程" tabindex="-1"><a class="header-anchor" href="#自组网流程"><span>自组网流程</span></a></h2><p>基于局域网中不断发送的 udp 设备报文, KitX Dashboard 可以很轻松地判断出局域网中运行着 KitX Dashboard 的设备</p><p>在 udp 设备报文中增加 tcp 服务器相关字段, 即可依据 udp 设备报文自动建立连接, 组成网络</p><p>具体流程: (以某个设备的视角观察)</p>`,9)),n(s,{id:"mermaid-133",code:"eJxlkM9KAlEUxvc+xV2OC3dBmxDyX7gIhHwBq6GEKBnTjQYWxZiaWISZTspQNkM5Tn8wBofyZeacO71F93pdBG7u4p7vfL/vfHtKJrdP0pEAIeuS5774ukl7HWjZUDODJBQKkzJUH8CoQ6NNv6+pq9GeAxefqF1BTS+TiOQbZ2APsDnE2y+ovtHuOSns5og//oEnFWtDbKtB5h6Zm0VLyfxmJnsYk4vZHXltWwnDex8rBnZsaD17zpRqgxOmjgp0WinIZRKT/FmfAXx7KFz53m+l68/UJZTnWCwBFyRTxRUCNw0iWFuyUpSV1JFyTMC6w/GEh1pgEpmDPOPESyIGe+loRFYJjnTuJC5kt+GHjtql57jYNASUZ43/z5qQfJWV2AB3Sl/rQiq6gnuTIxfqBZL3Hpv/bEjUNahrofUIjoOTU2rWuT4hpoE/kyLXKQ=="}),e[1]||(e[1]=i('<p>当然, 观察的过程不会在连接主控或是建立主控后结束</p><p>这个观察的过程会持续进行, 以免发生网络内多台设备同时建立主控的情况</p><p>如果观察到有其它的主控的 udp 设备报文中的 <code>DeviceServerBuildTime</code> 字段早于自己的主控服务建立时间, 则主动关闭服务器, 并重新开始观察流程</p><h2 id="插件启动流程" tabindex="-1"><a class="header-anchor" href="#插件启动流程"><span>插件启动流程</span></a></h2><ol><li>启动仪表盘</li><li>用户选择启动插件A</li><li>仪表盘根据插件A的 PluginStruct.json 中的 RootStartupFileName 字段以及 LoaderStruct.json 中的 LoaderName 字段拼凑启动命令 根据 Config.json 中 Loaders.InstallPath 得到加载器安装路径, LoaderName 拼凑可执行文件名称来启动 Loader 传入参数格式为: <code>--load {file} --connect {address}:{port}</code> 其中, <ol><li><code>{file}</code> 为插件根启动文件的绝对路径</li><li><code>{address}</code> 为当前仪表盘与插件连接的地址 (目前为内网 IPv4 地址)</li><li><code>{port}</code> 为当前仪表盘通讯服务器的服务端口</li></ol></li><li>Loader 启动后与仪表盘建立 Socket 连接, 通过 --connect 参数后指定的地址与端口 启动后 Loader 向仪表盘发送一个文本, 格式为: <code>PluginStruct: {ps}</code>, 其中 <code>{ps}</code> 为 json 序列化的 PluginStruct 对象</li></ol>',5))])}const p=a(d,[["render",o],["__file","order.html.vue"]]),m=JSON.parse(`{"path":"/client/guide/order.html","title":"运行流程","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"运行流程","description":"本页引导新人快速熟悉 KitX 是按照什么顺序执行的","createTime":"2025/01/25 11:24:47","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://kitx.docs.catrol.cn/en/client/guide/order.html"}],["meta",{"property":"og:url","content":"https://kitx.docs.catrol.cn/client/guide/order.html"}],["meta",{"property":"og:site_name","content":"KitX 文档站"}],["meta",{"property":"og:title","content":"运行流程"}],["meta",{"property":"og:description","content":"本页引导新人快速熟悉 KitX 是按照什么顺序执行的"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-01-25T04:14:31.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-25T04:14:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"运行流程\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-25T04:14:31.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":3.52,"words":1057},"git":{"updatedTime":1737778471000,"contributors":[{"name":"Dynesshely","username":"Dynesshely","email":"catrol@qq.com","commits":11,"avatar":"https://avatars.githubusercontent.com/Dynesshely?v=4","url":"https://github.com/Dynesshely"}],"changelog":[{"hash":"04b0a5985edca6a2336a2823cd3abfe639a6d490","date":1674275627000,"email":"catrol@qq.com","author":"Dynesshely","message":"📝 📦 Chore, Struct: 尝试 hope 主题","commitUrl":"https://github.com/Crequency/KitX-Docs//commit/04b0a5985edca6a2336a2823cd3abfe639a6d490"},{"hash":"6ce0598d53d27c46d68d782d5aaa6bda5213f4fe","date":1674277764000,"email":"catrol@qq.com","author":"Dynesshely","message":"📝 📦 Chore, Struct: 按主题分离","commitUrl":"https://github.com/Crequency/KitX-Docs//commit/6ce0598d53d27c46d68d782d5aaa6bda5213f4fe"},{"hash":"6c932f557366acde5db021d923d41ae4fd6b31d4","date":1674313158000,"email":"catrol@qq.com","author":"Dynesshely","message":"📝 Chore: 引入 mdEnhance","commitUrl":"https://github.com/Crequency/KitX-Docs//commit/6c932f557366acde5db021d923d41ae4fd6b31d4"},{"hash":"aaafc9686691eb13e5cb3b349fab0b2965d222e5","date":1674315180000,"email":"catrol@qq.com","author":"Dynesshely","message":"📄 Docs: 自组网流程流程图更新","commitUrl":"https://github.com/Crequency/KitX-Docs//commit/aaafc9686691eb13e5cb3b349fab0b2965d222e5"},{"hash":"8fb226c6023754e381ec1c0e700105e73f832d90","date":1674318093000,"email":"catrol@qq.com","author":"Dynesshely","message":"📄 Docs: 英文文档","commitUrl":"https://github.com/Crequency/KitX-Docs//commit/8fb226c6023754e381ec1c0e700105e73f832d90"},{"hash":"44fcd1b1d07a1b9f980bf2b8f70d3a0dc522f9f2","date":1674582572000,"email":"catrol@qq.com","author":"Dynesshely","message":"📄 Docs: 关于插件的启动流程","commitUrl":"https://github.com/Crequency/KitX-Docs//commit/44fcd1b1d07a1b9f980bf2b8f70d3a0dc522f9f2"},{"hash":"a49b786592737eaf29f5eab4e7a30d6834fe0ca4","date":1676943272000,"email":"catrol@qq.com","author":"Dynesshely","message":"📦 Struct: Move default to root dir","commitUrl":"https://github.com/Crequency/KitX-Docs//commit/a49b786592737eaf29f5eab4e7a30d6834fe0ca4"},{"hash":"13a9df7ba78f7c6482b28d8215c2c95d4f47dcc2","date":1679477005000,"email":"catrol@qq.com","author":"Dynesshely","message":"📦 Struct: Move all files under <code v-pre>guide</code> to <code v-pre>client/guide</code>","commitUrl":"https://github.com/Crequency/KitX-Docs//commit/13a9df7ba78f7c6482b28d8215c2c95d4f47dcc2"},{"hash":"057024f141b705641af512e72678a8281448a4fd","date":1737775975000,"email":"catrol@qq.com","author":"Dynesshely","message":"📦 Struct: Move to <code v-pre>notes</code> folder to match theme's requirements","commitUrl":"https://github.com/Crequency/KitX-Docs//commit/057024f141b705641af512e72678a8281448a4fd"},{"hash":"ea653ca4bff29fe24e77077471595fce7fdb672f","date":1737777012000,"email":"catrol@qq.com","author":"Dynesshely","message":"📝 Chore: Remove hard-coded permalink","commitUrl":"https://github.com/Crequency/KitX-Docs//commit/ea653ca4bff29fe24e77077471595fce7fdb672f"},{"hash":"bd0ec611249aa8e8b3c6079818362214bf33adbf","date":1737778471000,"email":"catrol@qq.com","author":"Dynesshely","message":"💾 Feat(Plume-Theme): Migrated","commitUrl":"https://github.com/Crequency/KitX-Docs//commit/bd0ec611249aa8e8b3c6079818362214bf33adbf"}]},"filePathRelative":"client/guide/order.md","categoryList":[{"id":"62608e","sort":10007,"name":"client"},{"id":"b9f47b","sort":10006,"name":"guide"}]}`);export{p as comp,m as data};
