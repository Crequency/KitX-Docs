import{_ as e,p as a,q as i,a1 as d}from"./framework-a7aa02af.js";const n={},l=d('<h1 id="打包插件" tabindex="-1"><a class="header-anchor" href="#打包插件" aria-hidden="true">#</a> 打包插件</h1><h2 id="手动环境搭建" tabindex="-1"><a class="header-anchor" href="#手动环境搭建" aria-hidden="true">#</a> 手动环境搭建</h2><ol><li>准备打包工具 (首先需要拥有 .NET 7 的 SDK 方可执行以下命令)</li></ol><div class="language-SHELL line-numbers-mode" data-ext="SHELL"><pre class="language-SHELL"><code>dotnet tool install --global KitX.KXP.Tool\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>准备模板生成工具 (同样需要有 .NET 7 的 SDK)</li></ol><div class="language-SHELL line-numbers-mode" data-ext="SHELL"><pre class="language-SHELL"><code>dotnet tool install --global KitX.Struct.Producer\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="开始打包" tabindex="-1"><a class="header-anchor" href="#开始打包" aria-hidden="true">#</a> 开始打包</h2><div class="language-SHELL line-numbers-mode" data-ext="SHELL"><pre class="language-SHELL"><code>mkdir plugin # 将您插件的所有文件放置于某一个文件夹下, 例如: `./plugin`\nksmaker -o ./plugin/ # 运行模板生成工具, 该命令会在 ./plugin/ 目录下创建 `PluginStruct.json` 和 `LoaderStruct.json` 文件\nvim ./plugin/PluginStruct.json # 编辑生成的插件结构模板, 可把 `vim` 命令换成其它文本编辑器\nvim ./plugin/LoaderStruct.json # 编辑生成的加载器结构模板, 可把 `vim` 命令换成其它文本编辑器\nkxpmaker -s ./plugin/ # 打包插件, 默认输出到工作目录 `plugin.kxp` 文件\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更多关于 <code>ksmaker</code> 和 <code>kxpmaker</code> 的命令语法请执行命令: <code>ksmaker --help</code> 或者 <code>kxpmaker --help</code></p><h2 id="使用-kitx-sdk" tabindex="-1"><a class="header-anchor" href="#使用-kitx-sdk" aria-hidden="true">#</a> 使用 KitX SDK</h2><p>//TODO: KitX SDK</p><h1 id="发布插件" tabindex="-1"><a class="header-anchor" href="#发布插件" aria-hidden="true">#</a> 发布插件</h1><p>//TODO: KitX 插件市场</p>',13),r=[l];function s(c,t){return a(),i("div",null,r)}const u=e(n,[["render",s],["__file","package-plugin.html.vue"]]);export{u as default};
