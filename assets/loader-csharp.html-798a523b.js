import{_ as o,M as c,p as t,q as i,R as a,t as e,N as n,a1 as l}from"./framework-a7aa02af.js";const d={},s=a("h1",{id:"适用于-c-的-loader",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#适用于-c-的-loader","aria-hidden":"true"},"#"),e(" 适用于 C# 的 Loader")],-1),h={href:"https://github.com/Crequency/KitX-Loaders/tree/main/KitX.Loader.CSharp",target:"_blank",rel:"noopener noreferrer"},p=l('<h2 id="设计思路" tabindex="-1"><a class="header-anchor" href="#设计思路" aria-hidden="true">#</a> 设计思路</h2><p>先决条件:</p><ol><li>dotnet 平台中已有成熟的插件框架: MAF/MEF</li><li>csharp 是基于虚拟机和 CIL 的语言, 易于实现主动加载器</li><li>csharp 有成熟的接口和反射机制</li></ol><p>实际设计:</p><h3 id="文件组成" tabindex="-1"><a class="header-anchor" href="#文件组成" aria-hidden="true">#</a> 文件组成</h3><p>程序部分包含:</p><ul><li><code>ArgsParser.cs</code>: 启动参数处理器</li><li><code>Option.cs</code>: 启动选项定义类</li><li><code>Program.cs</code>: 程序入口</li></ul><p>加载器部分包含</p><ul><li><code>CommunicationManager.cs</code>: 通讯管理器, 负责处理与 KitX Dashboard 的通讯</li><li><code>PluginManager.cs</code>: 插件管理器, 调度 KitX Plugin 的生命周期</li></ul>',9);function _(u,m){const r=c("ExternalLinkIcon");return t(),i("div",null,[s,a("p",null,[e("获取 "),a("a",h,[e("源代码"),n(r)]),e(" .")]),p])}const x=o(d,[["render",_],["__file","loader-csharp.html.vue"]]);export{x as default};
