import{_ as a,c as s,a as i,d as n,o,r}from"./app-DZLWD7CX.js";const l={};function c(d,e){const t=r("Mermaid");return o(),s("div",null,[e[0]||(e[0]=i(`<h2 id="order-of-execution-of-dashboard" tabindex="-1"><a class="header-anchor" href="#order-of-execution-of-dashboard"><span>Order of Execution of Dashboard</span></a></h2><p>All the <code>Managers</code>, <code>Services</code> and source code in this process are in <code>KitX Dashboard/Services/</code></p><ol><li>Initialize EventBus (<code>EventHandlers</code>)</li><li>Process command line arguments</li><li>Check if there is another instance running to prevent multiple instances running at the same time</li><li>StartUp check <ol><li>Read configuration file, initialize configuration information (if it exists, read it, if not, initialize default configuration)</li><li>Init log system, start logging</li><li>Init global exception handler</li><li>Init environment (read if it exists, create if not) <ol><li>Common.Algorithm</li></ol></li><li>Init database (read if it exists, create if not)</li><li>Init task manager (<code>TasksManager</code>)</li><li>Init network manager (<code>WebManager</code>)</li><li>Init data record manager (<code>StatisticsManager</code>)</li><li>Init event handlers (<code>EventHandlers</code>)</li><li>Init file monitoring manager (<code>FileWatcherManager</code>)</li></ol></li><li>Enter app lifetime loop, launch gui</li></ol><h2 id="network-initialization-process" tabindex="-1"><a class="header-anchor" href="#network-initialization-process"><span>Network Initialization Process</span></a></h2><ul><li>In the 4.7 step of <code>Dashboard Startup Process</code>, the actual code executed is:<div class="language-csharp line-numbers-mode" data-ext="csharp" data-title="csharp"><button class="copy" title="Copy code" data-copied="Copied"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  #</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">region</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Init WebManager</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  Program</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">TasksManager</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">SignalRun</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">nameof</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">SignalsNames</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">MainWindowInitSignal</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">),</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> ()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">      new</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> Thread</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">          Thread</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Sleep</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Program</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Config</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Web</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">DelayStartSeconds</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1000</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">          Program</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">WebManager</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> WebManager</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">().</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      }).</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  #</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">endregion</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>This task will be <code>Raise</code> after the <code>InitWindow()</code> function in <code>MainWindow.xaml.cs</code> is executed Then sleep for <code>Program.Config.Web.DelayStartSeconds</code> seconds before starting the network-related services</li><li><code>WebManager.Start()</code> Method will separately init <code>DevicesManager</code> , <code>DevicesServer</code> , <code>PluginsManager</code> and <code>PluginsServer</code></li><li><code>DevicesServer</code> call <code>Start()</code> method, then start to broadcast device info struct udp pack, present as json serialized string of <code>DeviceInfoStruct</code> (This struct define in <code>KitX.Web.Rules</code>) At the same time, it will also listen to udp packets from the local area network multicast, and parse them into <code>DeviceInfoStruct</code> structures, and add them to the interface through the <code>DevicesManager.Update(DeviceInfoStruct)</code> method</li><li><code>PluginServer</code> will start listening for network connection requests after calling the <code>Start()</code> method, and establish a tcp connection with the requested plugin. After receiving a report starting with <code>&quot;PluginStruct: &quot;</code>, the remaining part is deserialized as a json string into a <code>PluginStruct</code> structure, and added to the interface through the <code>PluginsManager.Execute(string, IPEndPoint)</code> method</li></ul><h2 id="self-organizing-network-process" tabindex="-1"><a class="header-anchor" href="#self-organizing-network-process"><span>Self-organizing network process</span></a></h2><p>Based on the udp device packets sent continuously in the local area network, KitX Dashboard can easily determine the devices running KitX Dashboard in the local area network</p><p>Add tcp server related fields to the udp device packets, and you can automatically establish connections based on the udp device packets to form a network</p><p>Specific process: (View from the perspective of a device)</p>`,9)),n(t,{id:"mermaid-133",code:"eJx1kLFugzAURfd8xR3JkK1SlypVgRAxVIoUpM4Gv8ZWwEb2g6oq/ffa4KFLVt+re87zzYlRocl3wFtWCq9aK5zElYVjknscDkcstdEMQ/xl3R2OehEieHKz7sgvyLMPwZ0KSUd6DtEkR0iKKUbR3Yn9Puzn61jxU/t3oU255q+/ISg2SuMmWlBmhTWGOgYr7dPMS+uOjXJ2uinUl/kJwkhsC9egQe5iHeNTUy997GrzwCGhKtH7wDoFFzyzAuthZbCFbeNhBGMxBM20sXqe/ntWWT7pXiLeklSwuUROqiZO/N1yfTln54AwYd0Nou+/Y7fakt0fVuWAAQ=="}),e[1]||(e[1]=i('<p>Sure, the observation process will not end after connecting to the main control or building the main control</p><p>This process will continue to observe, in order to prevent multiple devices in the network from establishing the main control at the same time</p><p>If you observe that the <code>DeviceServerBuildTime</code> field in the udp device packet of other main controls is earlier than the time when your main control service is established, you will actively close the server and restart the observation process</p><h2 id="plugin-startup-process" tabindex="-1"><a class="header-anchor" href="#plugin-startup-process"><span>Plugin Startup Process</span></a></h2><ol><li>Start Dashboard</li><li>User select to start plugin A</li><li>The instrument panel is based on the RootstartupFilename field in PluginStruct.json of the plug -in a and the loadErname field in LoaderStruct.json According to Loaders.installPath in config.json, the loader installation path is obtained, and LoaderName pieces can be executed to start the loader The parameter format is: <code>-load {file} --connect {address}: {port}</code> ` <ol><li><code>{file}</code> is the absolute path of the root startup file of the plugin</li><li><code>{address}</code> is the address connected to the current instrument panel to connect to the plugin (currently the internal network IPv4 address)</li><li><code>{port}</code> is the service port of the current dashboard communication server</li></ol></li><li>After the Loader is started, set up a socket connection with the instrument panel. The address and port specified after the --connect parameter After the launch, Loader sends a text to the dashboard with the format: <code>pluginStruct: {ps}</code>, where <code>{ps}</code> is a JSON serialized pluginstruct object</li></ol>',5))])}const p=a(l,[["render",c],["__file","order.html.vue"]]),k=JSON.parse(`{"path":"/en/client/guide/order.html","title":"Order of Execution","lang":"en-US","frontmatter":{"lang":"en-US","title":"Order of Execution","description":"This page will lead you to get familiar with the order of execution in KitX project","createTime":"2025/01/25 11:25:05","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://kitx.docs.catrol.cn/client/guide/order.html"}],["meta",{"property":"og:url","content":"https://kitx.docs.catrol.cn/en/client/guide/order.html"}],["meta",{"property":"og:site_name","content":"KitX Docs"}],["meta",{"property":"og:title","content":"Order of Execution"}],["meta",{"property":"og:description","content":"This page will lead you to get familiar with the order of execution in KitX project"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-25T04:14:31.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-25T04:14:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Order of Execution\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-25T04:14:31.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":2.39,"words":718},"git":{"updatedTime":1737778471000,"contributors":[{"name":"Dynesshely","username":"Dynesshely","email":"catrol@qq.com","commits":7,"avatar":"https://avatars.githubusercontent.com/Dynesshely?v=4","url":"https://github.com/Dynesshely"}],"changelog":[{"hash":"8fb226c6023754e381ec1c0e700105e73f832d90","date":1674318093000,"email":"catrol@qq.com","author":"Dynesshely","message":"📄 Docs: 英文文档","commitUrl":"https://github.com/Crequency/KitX-Docs//commit/8fb226c6023754e381ec1c0e700105e73f832d90"},{"hash":"44fcd1b1d07a1b9f980bf2b8f70d3a0dc522f9f2","date":1674582572000,"email":"catrol@qq.com","author":"Dynesshely","message":"📄 Docs: 关于插件的启动流程","commitUrl":"https://github.com/Crequency/KitX-Docs//commit/44fcd1b1d07a1b9f980bf2b8f70d3a0dc522f9f2"},{"hash":"a49b786592737eaf29f5eab4e7a30d6834fe0ca4","date":1676943272000,"email":"catrol@qq.com","author":"Dynesshely","message":"📦 Struct: Move default to root dir","commitUrl":"https://github.com/Crequency/KitX-Docs//commit/a49b786592737eaf29f5eab4e7a30d6834fe0ca4"},{"hash":"1a7614bcb53ba7402a4a23ebe74219431f4fa97d","date":1679477127000,"email":"catrol@qq.com","author":"Dynesshely","message":"📦 Struct: Move all files under <code v-pre>en/guide</code> to <code v-pre>en/client/guide</code>","commitUrl":"https://github.com/Crequency/KitX-Docs//commit/1a7614bcb53ba7402a4a23ebe74219431f4fa97d"},{"hash":"057024f141b705641af512e72678a8281448a4fd","date":1737775975000,"email":"catrol@qq.com","author":"Dynesshely","message":"📦 Struct: Move to <code v-pre>notes</code> folder to match theme's requirements","commitUrl":"https://github.com/Crequency/KitX-Docs//commit/057024f141b705641af512e72678a8281448a4fd"},{"hash":"ea653ca4bff29fe24e77077471595fce7fdb672f","date":1737777012000,"email":"catrol@qq.com","author":"Dynesshely","message":"📝 Chore: Remove hard-coded permalink","commitUrl":"https://github.com/Crequency/KitX-Docs//commit/ea653ca4bff29fe24e77077471595fce7fdb672f"},{"hash":"bd0ec611249aa8e8b3c6079818362214bf33adbf","date":1737778471000,"email":"catrol@qq.com","author":"Dynesshely","message":"💾 Feat(Plume-Theme): Migrated","commitUrl":"https://github.com/Crequency/KitX-Docs//commit/bd0ec611249aa8e8b3c6079818362214bf33adbf"}]},"filePathRelative":"en/client/guide/order.md","categoryList":[{"id":"62608e","sort":10007,"name":"client"},{"id":"b9f47b","sort":10006,"name":"guide"}]}`);export{p as comp,k as data};
